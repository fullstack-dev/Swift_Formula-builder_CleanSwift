//
//  FBAddToFormulaViewController.swift
//  FormulaBuilderCS
//
//  Created by YI BIN FENG on 2017-02-27.
//  Copyright (c) 2017 orgname. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol FBAddToFormulaViewControllerInput {
    func displaySomething(viewModel: FBAddToFormula.Something.ViewModel)
}

protocol FBAddToFormulaViewControllerOutput {
    func doSomething(request: FBAddToFormula.Something.Request)
    var herbSearchViewController: FBHerbSearchViewController! { set get }
}

class FBAddToFormulaViewController: UITableViewController, FBAddToFormulaViewControllerInput {
    var output: FBAddToFormulaViewControllerOutput!
    var router: FBAddToFormulaRouter!
    
    var herbs = [DisplayedHerb]()

    override func awakeFromNib() {
        super.awakeFromNib()
        
        FBAddToFormulaConfigurator.sharedInstance.configure(viewController: self)
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        
        configureTableView()
    }
    
    fileprivate func configureTableView() {
        tableView.register(UINib(nibName: "FBCell", bundle: nil), forCellReuseIdentifier: kCell)
    }

    func doSomethingOnLoad() {

        let request = FBAddToFormula.Something.Request()
        output.doSomething(request: request)
    }

    func displaySomething(viewModel: FBAddToFormula.Something.ViewModel) {}
    
    func refereshUI() {
        
        let allHerbs = output.herbSearchViewController.allHerbs
        let savedHerbIDs = FBSaveToFormulaHelper.shared.getSavedHerbIDs()
        herbs.removeAll()
        
        for herb in allHerbs {
            
            if savedHerbIDs.contains(herb.id) {
                herbs.append(herb)
            }
        }

        tableView.reloadData()
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return herbs.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: kCell) as! FBCell
        let herb = herbs[indexPath.row]
        
        cell.configure(herb: herb)
        cell.contentView.backgroundColor = UIColor.white
        cell.addButton.isEnabled = false
        cell.cellDelegate = self
        
        return cell
    }

    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        let herb = herbs[indexPath.row]
        router.navigateToProfilePage(with: herb.id)
    }
    
    override func tableView(_ tableView: UITableView, editActionsForRowAt indexPath: IndexPath) -> [UITableViewRowAction]? {
        
        let deleteButton = UITableViewRowAction.init(style: .destructive, title: "Delete") { (delete, indexPath) in
            let herb = self.herbs[indexPath.row]
            self.herbs.remove(at: indexPath.row)
            tableView.deleteRows(at: [indexPath], with: .right)
            FBSaveToFormulaHelper.shared.removeHerbID(herb.id)
            
            let index = self.output.herbSearchViewController.addToFormulaHerbs.index(of: herb)
            self.output.herbSearchViewController.addToFormulaHerbs.remove(at: index!)
            self.output.herbSearchViewController.updateMyFormulaNumberLabel()
            
            for displayedHerb in self.output.herbSearchViewController.displayedHerbs {
                if herb.id == displayedHerb.id {
                    displayedHerb.addToFormula = false
                    break
                }
            }
            
            self.output.herbSearchViewController.sortDisplayedHerbs()
            self.output.herbSearchViewController.tableView.reloadData()
            
            if self.herbs.isEmpty {
                self.output.herbSearchViewController.headerTop.constant = 0
                UIView.animate(withDuration: kDuration, animations: { 
                    self.output.herbSearchViewController.view.layoutIfNeeded()
                })
            }
        }
        
        return [deleteButton]
    }
}

// MARK: FBCellDelegate

extension FBAddToFormulaViewController: FBCellDelegate {
    func addHerbToCompare(_ herb: DisplayedHerb) {}

    
    func addFormulaToCompare(_ formula: DisplayedFormula) {}
    
    func favoriteStatusChanged(herb: DisplayedHerb?, formula: DisplayedFormula?) {
        
        FBCoreWorker.shared.favoriteStatusChanged(with: herb!.id, type: "Herb")
        
        for displayedHerb in output.herbSearchViewController.displayedHerbs {
            if herb!.id == displayedHerb.id {
                displayedHerb.isFavorited = herb!.isFavorited
                
                let row = output.herbSearchViewController.displayedHerbs.index(of: displayedHerb)
                let indexPath = IndexPath.init(row: row!, section: 0)
                output.herbSearchViewController.tableView.reloadRows(at: [indexPath], with: .automatic)
                
                break
            }
        }
    }
    
    func addHerbToMyFormula(herb: DisplayedHerb?) {}
    
    func lockStatusChanged(herb: DisplayedHerb?, formula: DisplayedFormula?) {}
}

