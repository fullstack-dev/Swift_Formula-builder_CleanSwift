//
//  FBCategoriesListInteractor.swift
//  FormulaBuilderCS
//
//  Created by PFIdev on 2/10/17.
//  Copyright (c) 2017 orgname. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import FormulaBuilderCore

protocol FBCategoriesListInteractorInput {
    func fetchCategories(_ request: FBCategoriesList.FetchCategories.Request)
    func fetchAllHerbs()
    func fetchAllFormulas()
    var herbs: [FBHerb]! { get }
    var formulas: [FBFormula]! { get }
    var categories: [FBCategory]? { get }
}

protocol FBCategoriesListInteractorOutput {
    func presentFetchedCategories(response: FBCategoriesList.FetchCategories.Response)
    func presentFetchedHerbs(response: FBHerbSearch.FetchHerbs.Response)
    func presentFetchedFormulas(response: FBFormulaSearch.FetchFormulas.Response)
}

class FBCategoriesListInteractor: FBCategoriesListInteractorInput {
    var output: FBCategoriesListInteractorOutput!
    var worker: FBCategoriesListWorker!
    var herbs: [FBHerb]!
    var formulas: [FBFormula]!
    var categories: [FBCategory]?

    func fetchCategories(_ request: FBCategoriesList.FetchCategories.Request) {

        store.fetchCategories(categoryType: (request.type == .herb ? FormulaBuilderCore.CategoryType.herb : FormulaBuilderCore.CategoryType.formula)) { categories in
            let response = FBCategoriesList.FetchCategories.Response(categories: categories)
            self.output.presentFetchedCategories(response: response)
        }
        
    }
    func fetchAllHerbs() {
        store.fetchHerbs(withFilter: .all) { herbs in
            //            if request.category != nil {
            //                for herb in herbs {
            //                    if request.category!.itemIDs.contains(herb.id) {
            //                        self.herbs?.append(herb)
            //                    }
            //                }
            //            } else {
            //                self.herbs = herbs
            //            }
            
            self.herbs = herbs
            let response = FBHerbSearch.FetchHerbs.Response(herbs: self.herbs!)
            self.output.presentFetchedHerbs(response: response)
        }
    }
    func fetchAllFormulas() {
        store.fetchFormulas(withFilter: .all) { formulas in
            self.formulas = formulas
            let response = FBFormulaSearch.FetchFormulas.Response(formulas: formulas)
            self.output.presentFetchedFormulas(response: response)
        }
    }
}
