//
//  FBCategoriesListPresenter.swift
//  FormulaBuilderCS
//
//  Created by PFIdev on 2/10/17.
//  Copyright (c) 2017 orgname. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import FormulaBuilderCore

protocol FBCategoriesListPresenterInput {
    func presentFetchedCategories(response: FBCategoriesList.FetchCategories.Response)
    func presentFetchedHerbs(response: FBHerbSearch.FetchHerbs.Response)
    func presentFetchedFormulas(response: FBFormulaSearch.FetchFormulas.Response)
    
}

protocol FBCategoriesListPresenterOutput: class {
    func displayFetchedCategories(viewModel: FBCategoriesList.FetchCategories.ViewModel)
    func displayFetchedFormulas(viewModel: FBFormulaSearch.FetchFormulas.ViewModel)
    func displayFetchedHerbs(viewModel: FBHerbSearch.FetchHerbs.ViewModel)
}

class FBCategoriesListPresenter: FBCategoriesListPresenterInput {
    weak var output: FBCategoriesListPresenterOutput!
    
    func presentFetchedFormulas(response: FBFormulaSearch.FetchFormulas.Response) {
            
            //        var displayedFormulas: [FBFormulaSearch.FetchFormulas.ViewModel.DisplayedFormula] = []
            
            var displayedFormulas = [DisplayedFormula]()
            
            for formula in response.formulas {
                
                let displayFormula = DisplayedFormula(with: formula)
                displayedFormulas.append(displayFormula)
                
            }
            
            let viewModel = FBFormulaSearch.FetchFormulas.ViewModel(displayedFormulas: displayedFormulas)
            output.displayFetchedFormulas(viewModel: viewModel)
        }
        
        func presentFetchedHerbs(response: FBHerbSearch.FetchHerbs.Response) {
            var displayedHerbs = [DisplayedHerb]()
            
            for herb in response.herbs {
                if herb.name.isEmpty == false && herb.id.isEmpty == false {
                    let displayedHerb = DisplayedHerb(with: herb)
                    displayedHerbs.append(displayedHerb)
                }
            }
            
            let viewModel = FBHerbSearch.FetchHerbs.ViewModel(displayedHerbs: displayedHerbs)
            output.displayFetchedHerbs(viewModel: viewModel)
        }
        func presentFetchedCategories(response: FBCategoriesList.FetchCategories.Response) {
            
            var displayedCategories: [FBCategoriesList.FetchCategories.ViewModel.DisplayedCategory] = []
            
            for category in response.categories {
                
                var itemIDs = [String]()
                
                for itemID in category.itemIDs {
                    itemIDs.append(itemID)
                }
                
                let displayedCategory = FBCategoriesList.FetchCategories.ViewModel.DisplayedCategory(id: category.id, name: category.name, itemIDs: itemIDs)
                
                displayedCategories.append(displayedCategory)
            }
            
            let viewModel = FBCategoriesList.FetchCategories.ViewModel(displayedCategories: displayedCategories)
            
            output.displayFetchedCategories(viewModel: viewModel)
        }
        
        
}
