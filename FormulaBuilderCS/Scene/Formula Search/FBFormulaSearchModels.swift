//
//  FBFormulaSearchModels.swift
//  FormulaBuilderCS
//
//  Created by PFIdev on 2/3/17.
//  Copyright (c) 2017 orgname. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import FormulaBuilderCore

struct FBFormulaSearch {
    
    struct FetchFormulas {
    
        struct Request {}
    
        struct Response {
            var formulas: [FBFormula]
        }

        struct ViewModel {
            
//            struct DisplayedFormula: Equatable {
//                var id: String
//                var name: String
//                var simplifiedChinese: String?
//                var isLocked: Bool
//                var isCompared: Bool
//                var isFavorited: Bool
//                var herbsCount: Int
//                
//                mutating func lockStatusChanged(_ isLocked: Bool) {
//                    self.isLocked = isLocked
//                }
//            }
            
//            var displayedFormulas: [DisplayedFormula]
            var displayedFormulas: [DisplayedFormula]
        }
    }
}

//func ==(lhs: FBFormulaSearch.FetchFormulas.ViewModel.DisplayedFormula, rhs: FBFormulaSearch.FetchFormulas.ViewModel.DisplayedFormula) -> Bool{
//    return lhs.id == rhs.id
//}

class DisplayedFormula: NSObject {
    var id = ""
    var name = ""
    var simplifiedChinese = ""
    var traditionalChinese = ""
    var englishName = ""
    var isLocked = false
    var isCompared = false
    var isFavorited = false
    var isSelected = false
    var containsInComparedHerb = false
    var readOnly = false
    var number = 0
    var herbIDs = [String]()
    let formulaObj: FBFormula?
    var alternateHerbs: [FBHerb] = []
    
    init(with formula: FBFormula) {
        id = formula.id
        name = formula.name.capitalized
        simplifiedChinese = formula.simplifiedChinese ?? ""
        traditionalChinese = formula.traditionalChinese ?? ""
        englishName = ""
        isFavorited = formula.favorite
        readOnly = formula.readOnly
        
        for herb in formula.herbs {
            herbIDs.append(herb.id)
        }
        
        for alternateHerb in formula.alternateHerbs
        {
            if alternateHerb.herbID == nil
            {
                continue
            }
            let herb = FBHerb(name: alternateHerb.name, id: alternateHerb.herbID!, favorite: false, readOnly: alternateHerb.readOnly, pinyin: alternateHerb.pinyin, pinyinCode: alternateHerb.pinyinCode, simplifiedChinese: alternateHerb.simplifiedChinese, traditionalChinese: alternateHerb.traditionalChinese, preparation: alternateHerb.preparation, englishCommons: alternateHerb.englishCommons, latinNames: alternateHerb.latinNames, sourceTextEnglish: alternateHerb.sourceTextEnglish, sourceTextChinese: alternateHerb.sourceTextChinese, species: alternateHerb.species, flavours: alternateHerb.flavours, natures: alternateHerb.natures, channels: alternateHerb.channels, notes: alternateHerb.notes, alternateHerbs: [], preparations: [])
            alternateHerbs.append(herb)
            if let herbId = alternateHerb.herbID
            {
                herbIDs.append(herbId)
            }
            
        }
        number = herbIDs.count
        formulaObj = formula
    }
}







