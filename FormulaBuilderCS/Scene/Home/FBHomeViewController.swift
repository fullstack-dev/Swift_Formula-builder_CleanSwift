    //
    //  FBHomeViewController.swift
    //  FormulaBuilderCS
    //
    //  Created by PFIdev on 2/3/17.
    //  Copyright (c) 2017 orgname. All rights reserved.
    //
    //  This file was generated by the Clean Swift Xcode Templates so you can apply
    //  clean architecture to your iOS and Mac projects, see http://clean-swift.com
    //

import UIKit

let kDuration = 0.3
let kMinAlpha: CGFloat = 0.5
let kSearchViewHeaderHeigth: CGFloat = 45
let triggerViewX: CGFloat = 100 // swipe view to right distance > 100, show menu view
    
protocol FBHomeViewControllerInput {
    
}

protocol FBHomeViewControllerOutput {
    var herbSearchViewController: FBHerbSearchViewController! { get set }
    var formulaSearchViewController: FBFormulaSearchViewController! { get set }
}

class FBHomeViewController: UIViewController {
    var output: FBHomeViewControllerOutput!
    var router: FBHomeRouter!
    
    fileprivate var formulaSearchViewHeader: UIView!
    fileprivate var formulaSearchViewMaxTop = -((UIScreen.main.bounds.size.height - 64) / 2 - kSearchViewHeaderHeigth) // formula search view's maxium top constant
    fileprivate var landscape = false
    fileprivate var isMenuViewHidden = true
    
    var filter = FetchFilter.all
    
    @IBOutlet weak var contentView: UIView!
    @IBOutlet weak var herbSearchView: UIView!
    @IBOutlet weak var formulaSearchView: UIView!
    
    @IBOutlet weak var switchButton: UIBarButtonItem!
    @IBOutlet weak var clearButton: UIBarButtonItem!
    
    @IBOutlet weak var formulaSearchViewTop: NSLayoutConstraint!
    @IBOutlet var portraitConstraints: [NSLayoutConstraint]!
    @IBOutlet var landscapeConstraintsFormulaViewRight: [NSLayoutConstraint]!
    @IBOutlet var landscapeConstraintsFormulaViewLeft: [NSLayoutConstraint]!

    override func awakeFromNib() {
        super.awakeFromNib()
        FBHomeConfigurator.sharedInstance.configure(viewController: self)
    }

    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        if UIDevice.current.orientation.isLandscape { // landscape mode
            self.contentView.removeConstraints(self.portraitConstraints)
            self.contentView.addConstraints(self.landscapeConstraintsFormulaViewRight)
            
            self.switchButton.tintColor = self.clearButton.tintColor
            self.switchButton.isEnabled = true
        }
    }

    override func viewWillTransition(to size: CGSize, with coordinator: UIViewControllerTransitionCoordinator) {
        super.viewWillTransition(to: size, with: coordinator)
        
        coordinator.animate(alongsideTransition: { context in
            
            if UIDevice.current.orientation.isLandscape { // landscape mode
                self.contentView.removeConstraints(self.portraitConstraints)
                self.contentView.addConstraints(self.landscapeConstraintsFormulaViewRight)

                self.switchButton.tintColor = self.clearButton.tintColor
                self.switchButton.isEnabled = true

            } else { // portrait mode
                self.contentView.removeConstraints(self.landscapeConstraintsFormulaViewRight)
                self.contentView.addConstraints(self.portraitConstraints)
                
                self.switchButton.tintColor = UIColor.clear
                self.switchButton.isEnabled = false
            }
        }, completion: nil)
    }
    
    func changeFilter(_ filter: FetchFilter) {
        
        self.filter = filter
        output.herbSearchViewController.refereshUIWithFilter(filter)
        output.formulaSearchViewController.refereshUIWithFilter(filter)
    }
    
    func searchForHerb(_ yes: Bool, _ completion: @escaping () -> Swift.Void) {
        if yes {
            output.formulaSearchViewController.searchingHerb()
        } else {
            output.herbSearchViewController.searchingFormula()
        }
        
        formulaSearchViewTop.constant = maxTop() + 110

        UIView.animate(withDuration: kDuration, animations: {
            self.view.layoutIfNeeded()
        }) { _ in
            completion()
        }
    }
}

// MARK: Moving TableViews (HerbSearchTV & FormulaSearchTV)
extension FBHomeViewController {
    func moveFormulaSearchViewToBottom() {
        formulaSearchViewTop.constant = -formulaSearchViewMaxTop
        
        UIView.animate(withDuration: kDuration, animations: {
            self.view.layoutIfNeeded()
        }) { _ in
            
        }
    }
    
    fileprivate func maxTop() -> CGFloat {
        var maxTop = formulaSearchViewMaxTop
        if output.herbSearchViewController.headerTop.constant != 0 {
            maxTop = formulaSearchViewMaxTop + kSearchViewHeaderHeigth
        }
        return maxTop
    }
    
    override func touchesMoved(_ touches: Set<UITouch>, with event: UIEvent?) {
        if output.herbSearchViewController.headerTop.constant > output.herbSearchViewController.headerHeight {
            return
        }
        
        if let touch = touches.first {
            let currentLocation = touch.location(in: view)
            let previousLocation = touch.previousLocation(in: view)
            
            if touchedFormulaSearchView(touch.view!) {
                let yDifferent = currentLocation.y - previousLocation.y
                swipingFormulaSearchView(yDifferent)
            } else {
                super.touchesMoved(touches, with: event)
            }
        }
    }
    
    override func touchesEnded(_ touches: Set<UITouch>, with event: UIEvent?) {
        if let touch = touches.first {
            // swiped formula search view
            if touchedFormulaSearchView(touch.view!) {
                
            } else { // swipe view
                super.touchesEnded(touches, with: event)
            }
        }
    }
    
    private func touchedFormulaSearchView(_ touchView: UIView) -> Bool {
        let formulaSearchViewControllerView = formulaSearchView.subviews.first!
        if formulaSearchViewControllerView.subviews.contains(touchView) {
            return true
        }
        return false
    }
    
    // swipe formula search view up or down
    private func swipingFormulaSearchView(_ yDifferent: CGFloat) {
        let constant = formulaSearchViewTop.constant + yDifferent
        
        if constant <= maxTop() {
            formulaSearchViewTop.constant = maxTop()
        } else if constant >= -formulaSearchViewMaxTop {
            formulaSearchViewTop.constant = -formulaSearchViewMaxTop
        } else {
            formulaSearchViewTop.constant = constant
        }
    }
    
    private func swipeFormulaSearchViewEnded() {
        let space = view.frame.size.height / 3
        let y = formulaSearchView.frame.origin.y
        if y < space {
            formulaSearchViewTop.constant = formulaSearchViewMaxTop
        } else if y > space * 2 {
            formulaSearchViewTop.constant = -formulaSearchViewMaxTop
        } else {
            formulaSearchViewTop.constant = 0
        }
        
        UIView.animate(withDuration: kDuration) {
            self.view.layoutIfNeeded()
        }
    }
}
    
// MARK: Button Handler
extension FBHomeViewController {
    @IBAction func switchButtonClicked(_ sender: UIBarButtonItem) {
        
        // formula search view on left
        if formulaSearchView.frame.origin.x == 0 {
            contentView.removeConstraints(landscapeConstraintsFormulaViewLeft)
            contentView.addConstraints(landscapeConstraintsFormulaViewRight)
        } else {
            contentView.removeConstraints(landscapeConstraintsFormulaViewRight)
            contentView.addConstraints(landscapeConstraintsFormulaViewLeft)
        }
        
        UIView.animate(withDuration: kDuration) {
            self.view.layoutIfNeeded()
        }
    }
    
    @IBAction func clearButtonClicked(_ sender: UIBarButtonItem) {
        view.endEditing(true)
        
        let alert = UIAlertController.init(title: nil, message: nil, preferredStyle: .actionSheet)
        alert.addAction(UIAlertAction.init(title: "Cancel", style: .cancel, handler: nil))
        alert.addAction(UIAlertAction.init(title: "Clear Herbs", style: .default, handler: { action in
            self.output.herbSearchViewController.clearHerbs()
        }))
        alert.addAction(UIAlertAction.init(title: "Clear Formulas", style: .default, handler: { action in
            self.output.formulaSearchViewController.clearFormulas()
        }))
        alert.addAction(UIAlertAction.init(title: "Clear My Formula", style: .default, handler: { action in
            self.output.herbSearchViewController.clearMyFormula()
        }))
        alert.addAction(UIAlertAction.init(title: "Clear All", style: .destructive, handler: { action in
            self.output.herbSearchViewController.clearAll()
            self.output.formulaSearchViewController.clearFormulas()
        }))
        
        present(alert, animated: true, completion: nil)
    }
}

// MARK: FBHomeViewControllerInput
extension FBHomeViewController : FBHomeViewControllerInput {
    
}
