//
//  FBProfileNotesViewController.swift
//  FormulaBuilderCS
//
//  Created by PFIdev on 2/11/17.
//  Copyright (c) 2017 orgname. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import FZAccordionTableView
import FormulaBuilderCore
import MGSwipeTableCell

protocol FBProfileNotesViewControllerInput
{
    func displayFetchedNotes(viewModel: FBProfileNotes.FetchNotes.ViewModel)
}

protocol FBProfileNotesViewControllerOutput
{
    func fetchHerbNotes(request: FBProfileNotes.FetchNotes.Request)
    func fetchFormulaNotes(request: FBProfileNotes.FetchNotes.Request)
}

class FBProfileNotesViewController: FBProfileBaseViewController
{
    var output: FBProfileNotesViewControllerOutput!
    var router: FBProfileNotesRouter!
    
    var notes: [DisplayedNote] = [DisplayedNote]()
    var filteredNotes: [DisplayedNote]?

    @IBOutlet weak var tv: UITableView!
    @IBOutlet weak var filterSearchBar: UISearchBar!

    override func awakeFromNib()
    {
        super.awakeFromNib()
        FBProfileNotesConfigurator.sharedInstance.configure(viewController: self)
    }

    override func viewDidLoad()
    {
        super.viewDidLoad()
        configureTableView()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        configureTableViewData()
    }
    
    fileprivate func configureTableView() {
        tv.register(UINib(nibName: kNoteCell, bundle: nil), forCellReuseIdentifier: kNoteCell)
        tv.tableFooterView = UIView(frame: CGRect.zero)
    }
    
    fileprivate func configureTableViewData() {
        
        if (profileMainViewController?.herb != nil) {
            let herb = profileMainViewController?.herb
            output.fetchHerbNotes(request: FBProfileNotes.FetchNotes.Request(id: herb!.id))
        } else {
            let formula = profileMainViewController?.formula
            output.fetchFormulaNotes(request: FBProfileNotes.FetchNotes.Request(id: formula!.id))
        }
    }
    
    fileprivate func filterDataSources(filterString: String) {
        let loweredFilterString = filterString.lowercased()
        if (filterString.characters.count > 0) {
            filteredNotes = notes.filter { (note) -> Bool in
                return note.title.lowercased().contains(loweredFilterString) || note.content.lowercased().contains(loweredFilterString)
            }
        } else {
            filteredNotes = notes
        }
        
        DispatchQueue.main.async {
            self.tv.reloadData()
        }
    }
    
    @IBAction func editNoteBtnTapped(_ sender: Any) {
        router.navigateToNoteEditPage()
    }
}

// MARK: UITableViewDelegate
extension FBProfileNotesViewController : UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        if (indexPath.row % 2 == 0) {
            return 12
        } else {
            return 103
        }
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return (filteredNotes != nil ? filteredNotes!.count : 0) * 2
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        var resCell : UITableViewCell?
        if (indexPath.row % 2 == 0) {
            let cell = UITableViewCell()
            cell.backgroundColor = FBColor.hexColor_F7F7F7()
            resCell = cell
        } else {
            let cell = tableView.dequeueReusableCell(withIdentifier: kNoteCell) as! FBNoteCell
            cell.configureCell(note: filteredNotes![indexPath.row / 2])
            
            let trashBtn = MGSwipeButton(title: "Trash", icon: UIImage(named: "trash"), backgroundColor: FBColor.hexColor_FE3824())
            trashBtn.centerIconOverText()
            
            trashBtn.callback = { (cell) -> Bool in
                let i = indexPath.row / 2
                self.filteredNotes?.remove(at: i)
                tableView.deleteRows(at: [IndexPath(row: indexPath.row - 1, section: indexPath.section) , indexPath], with: .fade)
                return true
            }
            
            cell.rightButtons = [trashBtn]
            resCell = cell
        }
        return resCell!
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if (indexPath.row % 2 == 1) {
            router.note = filteredNotes![indexPath.row / 2]
            router.navigateToNoteDetailPage()
        }
    }
}

// MARK: UISearchBarDelegate
extension FBProfileNotesViewController : UISearchBarDelegate {
    func searchBar(_ searchBar: UISearchBar, textDidChange searchText: String) {
        filterDataSources(filterString: filterSearchBar.text!)
    }
}

// MARK: FBProfileNotesViewControllerInput
extension FBProfileNotesViewController: FBProfileNotesViewControllerInput {
    internal func displayFetchedNotes(viewModel: FBProfileNotes.FetchNotes.ViewModel) {
        notes = viewModel.displayedNotes
        filterDataSources(filterString: filterSearchBar.text!)
    }
}
